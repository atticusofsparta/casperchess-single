{"version":3,"sources":["modules/modals/modal components/styles/ModalRoot.module.css","pages/Home.js","pages/Nopage.js","modules/modals/modal components/Modal.js","modules/modals/modal components/ModalBody.js","modules/modals/modal components/ModalHeader.js","modules/modals/modal components/ModalFooter.js","modules/modals/modal components/ModalService.js","modules/modals/modal components/AddModal.js","modules/modals/modal components/CloseModal.js","pages/Game.js","pages/Layout.js","modules/modals/modal components/ModalRoot.js","modules/modals/modal files/DeployedModal.js","modules/modals/modal files/ExecutionModal.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","modalRoot","modal-content","modal-dialog","Home","react_default","a","createElement","className","href","target","rel","alt","Nopage","Modal","props","children","ModalBody","ModalHeader","ModalFooter","ModalService","on","event","callback","document","addEventListener","e","detail","open","component","arguments","length","undefined","dispatchEvent","CustomEvent","close","AddModal","modal","console","log","CloseModal","Game","_ref","_ref2","gametoapp","boardWidth","chessboardRef","useRef","_useState","useState","Chess","_useState2","Object","slicedToArray","game","setGame","_useState3","_useState4","boardOrientation","_useState5","_useState6","currentTimeout","setCurrentTimeout","_useState7","_useState8","win","setWin","_useState9","_useState10","stalemate","setStalemate","_useState11","_useState12","gameResult","setGameResult","safeGameMutate","modify","g","update","objectSpread","makeRandomMove","possibleMoves","moves","game_over","in_draw","randomIndex","Math","floor","random","move","modalClose","reset","clearTimeout","Won","onClick","Lost","Draw","FenLogger","useEffect","newMove","history","logMove","JSON","stringify","getElementById","innerHTML","id","in_checkmate","playerInCheckmate","turn","concat","in_stalemate","index_esm","animationDuration","position","fen","onPieceDrop","sourceSquare","targetSquare","gameCopy","from","to","promotion","newTimeout","setTimeout","customBoardStyle","borderRadius","boxShadow","ref","undo","Layout","react_router_dom","ModalRoot","setModal","value","objectDestructuringEmpty","ModalComponent","styles","assign","DeployedModal","ExecutionModal","class","getDeployInterval","apiUrl","client","CasperServiceByJsonRPC","CasperClient","contract","Contracts","Contract","singleplayer_contract","App","score","setScore","balance","setBalance","address","setAddress","total_games","setTotal_Games","wins","setWins","losses","setLosses","_useState13","_useState14","stalemates","setStalemates","_useState15","_useState16","sessionGames","setSessionGames","_useState17","_useState18","sessionWins","setSessionWins","_useState19","_useState20","sessionLosses","setSessionLosses","_useState21","_useState22","sessionStalemates","setSessionStalemates","_connect","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","Signer","sendConnectionRequest","then","error","stop","apply","this","_deploy","_callee4","totalGamesArg","winsArg","lossesArg","stalematesArg","args","pubkey","result","deployJSON","_context4","RuntimeArgs","fromMap","new_total_games","CLValueBuilder","u512","new_wins","new_losses","new_stalemates","CLPublicKey","fromHex","setContractHash","callEntrypoint","cspr","pow","toString","DeployUtil","deployToJson","sign","success","sendDeploy","catch","_x","_sendDeploy","_callee5","signedDeployJSON","_context5","axios","post","headers","Content-Type","response","initiateGetDeployProcedure","data","alert","_x2","_initiateGetDeployProcedure","_callee6","hash","_context6","getDeploy","setInterval","_x3","_getDeploy","_callee7","deployHash","_context7","get","params","executionResults","hasOwnProperty","clearInterval","textAddress","textBalance","textTotal_Games","textWins","textLosses","textStalemates","textContent","replace","slice","_AccountInfo","_callee","publicKey","_context","window","casperlabsHelper","getActivePublicKey","sent","bal","parseInt","hex","pages_Layout","react_router","path","element","index","pages_Home","pages_Nopage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3b7ccf85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalRoot\":\"ModalRoot_modalRoot__2IeyM\",\"modal-content\":\"ModalRoot_modal-content__2nawS\",\"modal-dialog\":\"ModalRoot_modal-dialog__1SNzN\"};","import React from \"react\";\r\nimport \"./Style.css\";\r\n\r\nconst Home = () => {\r\n  const wallet =\r\n    \"https://chrome.google.com/webstore/detail/casper-signer/djhndpllfiibmcdbnmaaahkhchcoijce\";\r\n  return (\r\n    <div>\r\n      <header>Welcome to Casper Chess</header>\r\n      <h3>\r\n        The only chess game that lets you save your win to the blockchain, so\r\n        you can brag forever\r\n      </h3>\r\n      <div className=\"contentContainer\">\r\n        <div className=\"howItWorks\">\r\n          <div className=\"largeText\">HOW IT WORKS:</div>\r\n          <div>\r\n            <ol>\r\n              <li>\r\n                Fund your wallet from the testnet <a href=\"https://testnet.cspr.live/tools/faucet\">here.</a>\r\n              </li>\r\n              <li>Connect your Casper wallet by click the \"connect\" button above, the signer will prompt you to connect</li>\r\n             <li>\r\n                Go to the game tab and play a game against the computer. Once you win - or lose - your session score will go up. The session score is the second number in the score area, the first number is your saved score. When you are done playing, you can save to chain! You can play as many games as you want before saving, and saving is optional. If you dont save, and if you reload the page, you will lose your session score.\r\n              </li>\r\n              <li>\r\n                To save to chain, click on the \"save\" button. You will be prompted to sign a transaction. Wait for your saved score to update. Once the score updates, your session score is saved to the blockchain. Good luck!\r\n              </li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n        <div className=\"noCasper\">\r\n          <div className=\"largeText\">Dont have a Casper account?</div>\r\n          <div>\r\n            Download the Casper Signer extension{\" \"}\r\n            <a href={wallet} target=\"_blank\" rel=\"noopener noreferrer\" alt=\"\">\r\n              here\r\n            </a>\r\n          </div>\r\n          <div>set a new password to create a Vault</div>\r\n          <div>Then you can choose the \"Create Account\" option</div>\r\n          <div>set your name and then choose \"ED25519\" as the Algorithm</div>\r\n          <div>\r\n            dont forget to download your secret key so you can recover your\r\n            account if you forget your password\r\n          </div>\r\n        </div></div>\r\n      \r\n    \r\n      <div className=\"chessRulesContainer\">\r\n        <div className=\"LargeText\"> How to Play Chess</div>\r\n        <div className=\"chessRules\">\r\n          <div className=\"pieces\">\r\n            <ul className=\"piecesList\">\r\n              <li>King: the king may move one square in any direction, \r\n                so long as no piece is blocking his path and the move \r\n                does not put the king in check.\r\n              </li>\r\n              <li>Queen: the queen may move any number of squares straight \r\n                or diagonally in any direction.\r\n              </li>\r\n              <li>Rook: sometimes called a Castle, the rook may move any \r\n                number of squares in a straight line, horizontally or vertically.\r\n              </li>\r\n              <li>Bishop: the bishop may move any number of squares diagonally</li>\r\n              <li>Knight: the knight moves three squares total in an \"L\" shape. One \r\n                square horizontally or vertically and two squares in a direction 90 degrees to the \r\n                original direction. The knight \"jumps\" to its new position and is not \r\n                blocked by other pieces in its way.\r\n              </li>\r\n              <li>Pawn: pawns generally move only one square in the direction of your opponents side \r\n                of the board. On its first move from the starting position, the pawn can move two squares.\r\n                While it can only move straight ahead, a pawn can only attack diagonally. So if \r\n                its path ahead is blocked, it cannot move.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          </div>\r\n          </div>\r\n          <br/>\r\n          <div className=\"bottomContainer\">\r\n          <div className=\"specialMovesContainer\">\r\n            <div className=\"largeText\">Special Moves</div>\r\n            <div className=\"specialMoves\">\r\n              <ul>\r\n                <li>EN PASSANT: if a pawn moves forward three squares, it is even with where \r\n                  the opponents pawn would be if it moved forward two squares. If the opposing \r\n                  pawn uses its initial two square move to become even with your pawn, you may \r\n                  attack the opponent diagonally and take the piece as if it had only moved \r\n                  one square.\r\n                </li>\r\n                <li>Castle: if there are no pieces between your king and either of your rooks, \r\n                  and neither piece has moved, you can move the king two squares towards the rook \r\n                  and move the rook one square on the opposite side of the king. You cannot castle \r\n                  into, out of, or through check.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"objectiveContainer\">\r\n            <div className=\"largeText\">Objectives and terms</div>\r\n            <div className=\"objectives\">\r\n              <ul>\r\n                <li>Check: if a king can be directly taken by an opponent's piece \r\n                  on the opponent's next turn, the king is in check. If your king is in check \r\n                  you must move your kinbg out of check or move another piece to block \r\n                  your opponent.\r\n                </li>\r\n                <li>CheckMate: if a king is in check and there is no possible move to get out \r\n                  of check, it is a checkmate and the game is over. Whomever is in checkmate \r\n                  loses.\r\n                </li>\r\n                <li>StaleMate: if a king is not in check, but there are no moves \r\n                  that can be made without placing itself in check, it is called a \r\n                  StaleMate and the game ends in a draw.\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        \r\n        \r\n        \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from \"react\"\r\n\r\n\r\n\r\nconst Nopage = () => {return(<p>nothing here.... watchya looking for?</p>)}\r\n\r\nexport default Nopage;","import React from \"react\";\r\nexport default function Modal(props) {\r\n    return (\r\n      <div className=\"modal d-block\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            { props.children }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }","import React from \"react\";\r\nexport default function ModalBody(props) {\r\n    return (\r\n      <div className=\"modal-body\">\r\n        { props.children }\r\n      </div>\r\n    );\r\n  }","import React from \"react\";\r\nexport default function ModalHeader(props) {\r\n    return (\r\n      <div className=\"modal-header\">\r\n        { props.children }\r\n      </div>\r\n    );\r\n  }","import React from \"react\";\r\nexport default function ModalFooter(props) {\r\n    return (\r\n      <div className=\"modal-footer\">\r\n        { props.children }\r\n      </div>\r\n    );\r\n  }","const ModalService = {\r\n    on(event, callback) {\r\n      document.addEventListener(event, (e) => callback(e.detail));\r\n    },\r\n    open(component, props = {}) {\r\n      document.dispatchEvent(new CustomEvent('open', { detail: { component, props } }));\r\n    },\r\n    close(component, props = {}) {\r\n      document.dispatchEvent(new CustomEvent('close', { detail: { component, props } }));\r\n  },\r\n}\r\n  \r\n  export default ModalService;","import ModalService from \"./ModalService\";\r\n\r\nexport default function AddModal(modal){\r\n    ModalService.open(modal)\r\n    console.log(\"modal added\")\r\n}","import ModalService from \"./ModalService\";\r\n\r\nexport default function CloseModal(modal){\r\nModalService.close(modal)\r\n   \r\n    console.log(\"modal closed\")\r\n}","import React, {useEffect, useRef, useState } from 'react';\r\nimport Chess from 'chess.js';\r\nimport '../style.css';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport PopUp from '../modules/modals/modal files/PopUp';\r\nimport AddModal from '../modules/modals/modal components/AddModal';\r\nimport CloseModal from '../modules/modals/modal components/CloseModal';\r\nimport Modal from '../modules/modals/modal components/Modal';\r\nimport ModalBody from '../modules/modals/modal components/ModalBody';\r\nimport ModalHeader from '../modules/modals/modal components/ModalHeader';\r\nimport ModalFooter from '../modules/modals/modal components/ModalFooter';\r\n\r\n\r\nexport default function Game({ gametoapp }, { boardWidth }) {\r\n    const chessboardRef = useRef();\r\n    const [game, setGame] = useState(new Chess());\r\n    const [boardOrientation, setBoardOrientation] = useState('white');\r\n    const [currentTimeout, setCurrentTimeout] = useState();\r\n\r\n    //score logic\r\n    const [win, setWin] = useState(\"\")\r\n    const [stalemate, setStalemate] = useState(\"\")\r\n    const [gameResult, setGameResult] = useState(\"\")\r\n \r\n    \r\n    useEffect(()=>{\r\n      //win/loss\r\n      if (game.in_checkmate() === true) {\r\n        let playerInCheckmate = game.turn()\r\n        if (playerInCheckmate === \"b\") {\r\n          setWin(true)\r\n          console.log(\"white wins\")\r\n          \r\n        }\r\n        if (playerInCheckmate === \"w\") {\r\n          setWin(false)\r\n          console.log(\"black wins\")\r\n          \r\n        }\r\n  \r\n        console.log(`${playerInCheckmate} in checkmate`)\r\n      }\r\n  //stalemate\r\n      if (game.in_stalemate() | game.in_draw() === true) {\r\n\r\n        setStalemate(true)\r\n      \r\n        console.log(\"in stalemate \", stalemate)\r\n        \r\n      }\r\n\r\n    },[game, gameResult])\r\n\r\n    //send gameresult to app.js\r\n    useEffect(()=>{\r\n      if (win === true){setGameResult(\"win\");AddModal(Won)}\r\n      if (win === false){setGameResult(\"loss\");AddModal(Lost)}\r\n      if (stalemate === true){setGameResult(\"stalemate\");AddModal(Draw)}\r\n      if (gameResult === \"\" || \"win\" ||  gameResult ===  \"loss\" || gameResult === \"stalemate\") {gametoapp(gameResult)}\r\n    },[game, win, stalemate, gameResult])\r\n  \r\n    \r\n    \r\n  \r\n    function safeGameMutate(modify) {\r\n      setGame((g) => {\r\n        const update = { ...g };\r\n        modify(update);\r\n        return update;\r\n      });\r\n    }\r\n  \r\n    function makeRandomMove() {\r\n      const possibleMoves = game.moves();\r\n  \r\n      // exit if the game is over\r\n      if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return;\r\n  \r\n      const randomIndex = Math.floor(Math.random() * possibleMoves.length);\r\n      safeGameMutate((game) => {\r\n        game.move(possibleMoves[randomIndex]);\r\n      });\r\n    }\r\n  \r\n    function onDrop(sourceSquare, targetSquare) {\r\n      const gameCopy = { ...game };\r\n      const move = gameCopy.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q' // always promote to a queen for example simplicity\r\n      });\r\n      setGame(gameCopy);\r\n  \r\n      // illegal move\r\n      if (move === null) return false;\r\n  \r\n      // store timeout so it can be cleared on undo/reset so computer doesn't execute move\r\n      const newTimeout = setTimeout(makeRandomMove, 200);\r\n      setCurrentTimeout(newTimeout);\r\n      return true;\r\n    }\r\n\r\n\r\n   function modalClose(){\r\n     CloseModal()\r\n     \r\n      safeGameMutate((game) => {\r\n        game.reset();\r\n         setGameResult(\"\")\r\n        setWin(\"\")\r\n        setStalemate(\"\")\r\n      });\r\n      // stop any current timeouts\r\n      clearTimeout(currentTimeout);\r\n    \r\n   }\r\n    \r\n    function Won(props) {\r\n      return (\r\n        <Modal>\r\n          <ModalHeader>\r\n            <h3>Congratulations!</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <p>You Won!</p>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button onClick={ modalClose } className=\"btn btn-primary\">OK</button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n    function Lost(props) {\r\n      return (\r\n        <Modal>\r\n          <ModalHeader>\r\n            <h3>Better Luck Next Time</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <p>You Lost</p>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button onClick={ modalClose } className=\"btn btn-primary\">OK</button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n    function Draw(props) {\r\n      return (\r\n        <Modal>\r\n          <ModalHeader>\r\n            <h3>So Close</h3>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <p>This game was a draw</p>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button onClick={ modalClose } className=\"btn btn-primary\">OK</button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ////Move logger is rendered\r\n  \r\n    function FenLogger (){\r\n\r\n     \r\n\r\n        //initialize move content\r\n        useEffect(()=>{\r\n            \r\n            const newMove = game.history()\r\n            const parseMove = JSON.stringify(newMove)\r\n            const logMove = parseMove\r\n          if (null) { document.getElementById('fenlogger').innerHTML = 'Make a move...' }\r\n        else {document.getElementById('fenlogger').innerHTML = logMove}\r\n        \r\n       },[])\r\n       \r\n         // returns json\r\n\r\n        /**\r\n         * [{ color: 'w', from: 'e2', to: 'e4', flags: 'b', piece: 'p', san: 'e4' }]\r\n         */\r\n       \r\n        return (\r\n            <div id=\"fenlogger\"></div>\r\n            \r\n        )\r\n    }\r\n\r\n    //////chessborder is rendered\r\n\r\n    return (\r\n        <div id=\"gameContainer\">\r\n      <div id=\"boardContainer\">\r\n        <Chessboard\r\n          id=\"myboard\"\r\n          animationDuration={200}\r\n          boardOrientation={boardOrientation}\r\n          boardWidth={boardWidth}\r\n          position={game.fen()}\r\n          onPieceDrop={onDrop}\r\n          customBoardStyle={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\r\n          }}\r\n          ref={chessboardRef}\r\n        />\r\n        <FenLogger />\r\n        </div>\r\n        <br/>\r\n          <div id=\"boardBtnContainer\"> <button id=\"boardBtn\"\r\n           className=\"rc-button\"\r\n           onClick={() => {\r\n             safeGameMutate((game) => {\r\n               game.reset();\r\n               setGameResult(\"\")\r\n               setWin(\"\")\r\n               setStalemate(\"\")\r\n             });\r\n             // stop any current timeouts\r\n             clearTimeout(currentTimeout);\r\n           }}\r\n         >\r\n           reset\r\n         </button>\r\n\r\n        <button id=\"boardBtn\"\r\n          className=\"rc-button\"\r\n          onClick={() => {\r\n            safeGameMutate((game) => {\r\n              game.undo();\r\n            });\r\n            // stop any current timeouts\r\n            clearTimeout(currentTimeout);\r\n          }}\r\n        >\r\n          undo\r\n        </button></div>\r\n\r\n      </div>\r\n      \r\n    );\r\n  }","import { Outlet, Link } from \"react-router-dom\";\r\nimport React from \"react\"\r\nimport '../style.css';\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <ul className=\"navbar-nav me-auto\">\r\n      <li className=\"nav-item\">   \r\n        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n        </li>\r\n     \r\n      <li className=\"nav-item\">\r\n        <Link to=\"/Game\" className=\"nav-link\">Game</Link>\r\n      </li>\r\n      </ul>\r\n    \r\n  );\r\n};\r\n\r\nexport default Layout;","import { useState, useEffect } from 'react';\r\nimport ModalService from './ModalService';\r\nimport styles from './styles/ModalRoot.module.css'\r\nimport React from 'react';\r\n\r\nexport default function ModalRoot() {\r\n\r\n  const [modal, setModal] = useState({});\r\n\r\n  /* \r\n   * useEffect will run when the component renders, which might be more times than you think.\r\n   * 2nd arg = If present, effect will only activate if the values in the list change.\r\n   */\r\n  useEffect(() => {\r\n    ModalService.on('open', ({ component, props }) => {\r\n      setModal({\r\n        component,\r\n        props,\r\n        close: value => {\r\n          setModal({});\r\n        },\r\n      });\r\n    })\r\n    ModalService.on('close', ({}) => {\r\n      setModal({})\r\n    });\r\n  }, []);\r\n\r\n  const ModalComponent = modal.component ? modal.component : null;\r\n\r\n  return (\r\n    <section className={ modal.component ? styles.modalRoot : '' }>\r\n      \r\n      { ModalComponent && (\r\n        <ModalComponent\r\n          { ...modal.props }\r\n          close={ modal.close }\r\n          className={ ModalComponent ? 'd-block' : '' }\r\n        />\r\n      )}\r\n      \r\n    </section>\r\n  );\r\n}","import React from \"react\";\r\nimport Modal from \"../modal components/Modal\";\r\nimport ModalBody from \"../modal components/ModalBody\";\r\nimport ModalHeader from \"../modal components/ModalHeader\";\r\nimport ModalFooter from \"../modal components/ModalFooter\";\r\n\r\nexport default function DeployedModal(props) {\r\n  return (\r\n    <Modal>\r\n      <ModalHeader>\r\n        <h3>Saving</h3>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <p>Please follow the prompts from the Casper Signer to complete saving to the blockchain.</p>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n         </ModalFooter>\r\n    </Modal>\r\n  );\r\n}","import React from \"react\";\r\nimport Modal from \"../modal components/Modal\";\r\nimport ModalBody from \"../modal components/ModalBody\";\r\nimport ModalHeader from \"../modal components/ModalHeader\";\r\nimport ModalFooter from \"../modal components/ModalFooter\";\r\nimport \"./styles.loading.css\"\r\n\r\nexport default function ExecutionModal(props) {\r\n\r\n    \r\n  return (\r\n    <Modal>\r\n      <ModalHeader>\r\n        <h3>Writing to the blockchain</h3>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <p>Please wait while your results are written to the blockchain.</p>\r\n        <center><div class=\"lds-dual-ring\"></div></center>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n         </ModalFooter>\r\n    </Modal>\r\n  );\r\n}","import {CasperClient, CasperServiceByJsonRPC, DeployUtil, RuntimeArgs, CLPublicKey, CLValueBuilder, isConnected, Signer, Contracts} from \"casper-js-sdk\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route, Link, Outlet } from \"react-router-dom\";\r\nimport './style.css';\r\nimport Home from './pages/Home';\r\nimport Nopage from './pages/Nopage';\r\nimport Game from './pages/Game';\r\nimport Layout from './pages/Layout';\r\nimport axios from \"axios\";\r\nimport ModalRoot from \"./modules/modals/modal components/ModalRoot\";\r\nimport AddModal from \"./modules/modals/modal components/AddModal\";\r\nimport CloseModal from \"./modules/modals/modal components/CloseModal\";\r\nimport DeployedModal from \"./modules/modals/modal files/DeployedModal\";\r\nimport ExecutionModal from \"./modules/modals/modal files/ExecutionModal\";\r\n\r\n\r\nvar getDeployInterval = null;\r\n//import win/loss state from game\r\n\r\n\r\nconst apiUrl = \"http://localhost:6100/api\";\r\nconst casperService = new CasperServiceByJsonRPC(apiUrl);\r\nconst casperClient = new CasperClient(apiUrl);\r\nconst client = new CasperClient(apiUrl);\r\nconst contract = new Contracts.Contract(client);\r\nconst singleplayer_contract = \"hash-6f978f1bd5d7071d464fa3c4fe72f5c4d7aedbad6b558402ccf5d7aecbfd915b\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  // const globalPromiseRejectionHandler = (event) => {\r\n  //   console.log(\"Unhandled promise rejection reason: \", event.reason);\r\n  // }\r\n  \r\n  // window.onunhandledrejection = globalPromiseRejectionHandler;\r\n  \r\n  \r\n  //     window.onunhandledrejection = function(e) {\r\n  //     e.preventDefault()\r\n  //     console.log(e.reason);\r\n  //     setAddress(\"0186ac6f83c5bcca34f68ea7cc82f3917ccc10ad3eac96d5ad2b1dbeb0b6c02fa9\")\r\n  //   }\r\n  \r\n  \r\n  //   window.addEventListener(\"signer:locked\", (msg) => {\r\n  //         console.log(\"locked\");\r\n        \r\n  //   });\r\n\r\n \r\n\r\nconst [score, setScore] = useState(\"\");\r\n  let gametoapp = (gameResult) => {\r\n    \r\n    if (gameResult === \"\") {setScore(\"\")}\r\n    if (gameResult === \"win\"){setScore(\"win\")}\r\n    if (gameResult === \"loss\"){setScore(\"loss\")}\r\n    if (gameResult === \"stalemate\"){setScore(\"stalemate\")}\r\n    \r\n    console.log(\"gameResult\", gameResult)\r\n\r\n  }\r\n \r\n  \r\n   //connected account details\r\n   const [balance, setBalance] = useState(\"?\");\r\n   const [address, setAddress] = useState(\"?\");\r\n\r\n  //account game detals\r\n  const [total_games, setTotal_Games] = useState(0);\r\n  const [wins, setWins] = useState(0);\r\n  const [losses, setLosses] = useState(0);\r\n  const [stalemates, setStalemates] = useState(0);\r\n\r\n  //session game details\r\n  const [sessionGames, setSessionGames] = useState(0)\r\n  const [sessionWins, setSessionWins] = useState(0)\r\n  const [sessionLosses, setSessionLosses] = useState(0)\r\n  const [sessionStalemates, setSessionStalemates] = useState(0)  \r\n\r\n\r\n  useEffect(()=>{\r\n    \r\n    if (score === \"win\"){setSessionWins(sessionWins+1)}\r\n    if (score === \"loss\"){setSessionLosses(sessionLosses+1)}\r\n    if (score === \"stalemate\"){setSessionStalemates(sessionStalemates+1)}\r\n    if (score === \"win\" | \"loss\" | \"stalemate\"){setSessionGames(sessionGames+1)}\r\n    \r\n  },[score])\r\n\r\n\r\n//set html values\r\nuseEffect(()=>{ \r\n \r\n  const textAddress = document.getElementById('textAddress');\r\n  const textBalance = document.getElementById('textBalance');\r\n  const textTotal_Games = document.getElementById('textTotal_Games');\r\n  const textWins = document.getElementById('textWins');\r\n  const textLosses = document.getElementById('textLosses');\r\n  const textStalemates = document.getElementById('textStalemates');\r\n  textAddress.textContent = `Connected account: ${address.replace(address.slice(5, 61), ' . . . ')}`;\r\n  textBalance.textContent = `CSPR Balance: ${balance / 1000000000}`;\r\n  textTotal_Games.textContent = `Total Games: ${total_games}` + ` + ${sessionGames}`;\r\n  textWins.textContent = `Wins: ${wins}` + ` + ${sessionWins}`;\r\n  textLosses.textContent = `Losses: ${losses}` + ` + ${sessionLosses}`;\r\n  textStalemates.textContent = `Stalemates: ${stalemates}` + ` + ${sessionStalemates}`;\r\n},[address, balance, total_games, wins, losses, stalemates, sessionGames, sessionWins, sessionLosses, sessionStalemates])\r\n\r\n  //get  account data from server\r\n  useEffect(()=>{\r\n    async function AccountInfo(){\r\n      const publicKey = await window.casperlabsHelper.getActivePublicKey();\r\n            setAddress(publicKey);\r\n           axios.post('http://localhost:6100/balance', {\"publicKey\": publicKey}).then((response) => {\r\n             const bal = response.data;\r\n             setBalance(bal)\r\n             console.log(bal)\r\n           }\r\n           )\r\n           axios.get('http://localhost:6100/get_total_games', {params: {\r\n            publicKey: publicKey}}).then((response) => {\r\n              setTotal_Games(parseInt(response.data.hex, 16))   \r\n           }\r\n           )\r\n           axios.get('http://localhost:6100/get_wins', {params: {\r\n            publicKey: publicKey}}).then((response) => {\r\n              setWins(parseInt(response.data.hex, 16));            \r\n           }\r\n           )\r\n           axios.get('http://localhost:6100/get_losses', {params: {\r\n            publicKey: publicKey}}).then((response) => {\r\n              setLosses(parseInt(response.data.hex, 16));            \r\n           }\r\n           )\r\n           axios.get('http://localhost:6100/get_stalemates', {params: {\r\n            publicKey: publicKey}}).then((response) => {\r\n              setStalemates(parseInt(response.data.hex, 16));            \r\n           }\r\n            )\r\n\r\n\r\n          }\r\n    var accountinfoint = setInterval(AccountInfo, 10000)\r\n    return accountinfoint;\r\n  },[])\r\n\r\n  //connect button\r\n  async function connect(){\r\n    try{Signer.sendConnectionRequest().then(console.log('connect'))\r\n    \r\n  } catch(error){console.log(error)}\r\n    \r\n  }\r\n  //disconnect button\r\n  async function disconnect(){\r\n    try{Signer.disconnectFromSite().then(console.log('disconnect'));} catch(error){console.log(error)}\r\n  }\r\n//save button\r\n  async function deploy() {\r\nAddModal(DeployedModal)\r\n      let totalGamesArg = total_games + sessionGames;\r\n      let winsArg = wins + sessionWins;\r\n      let lossesArg = losses + sessionLosses;\r\n      let stalematesArg = stalemates + sessionStalemates;\r\n      const args = RuntimeArgs.fromMap({ //Need to build a UInt512 CLValue and package into RuntimeArgs\r\n        \"new_total_games\":CLValueBuilder.u512(totalGamesArg),\r\n        \"new_wins\":CLValueBuilder.u512(winsArg),\r\n        \"new_losses\":CLValueBuilder.u512(lossesArg),\r\n        \"new_stalemates\":CLValueBuilder.u512(stalematesArg)       \r\n       }); \r\n\r\n      const pubkey = CLPublicKey.fromHex(address); //Build CLPublicKey from hex representation of public key\r\n       contract.setContractHash(singleplayer_contract); //Sets the contract hash of the Contract instance. The hash of our highscore contract\r\n       const result = contract.callEntrypoint(\"add_game\", args, pubkey, \"casper-test\", csprToMotes(1).toString(), [], 10000000); //Builds a Deploy object at add_highscore entrypoint\r\n       const deployJSON = DeployUtil.deployToJson(result);\r\n       Signer.sign(deployJSON, address).then((success) => { //Initiates sign request\r\n         CloseModal()\r\n       sendDeploy(success);\r\n      \r\n     }).catch((error) => {\r\n       console.log(error);\r\n       console.log(args)\r\n       CloseModal()\r\n     });\r\n   \r\n   }\r\n   async function sendDeploy(signedDeployJSON) {\r\n     AddModal(ExecutionModal)\r\n    axios.post(\"http://localhost:6100/sendDeploy\", signedDeployJSON, { //Sends request to /sendDeploy endpoint in server.js. Need to send deployment from the backend do to CORS policy.\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((response) => {\r\n      const hash = response.data;\r\n      //updateStatus(\"Deployed. <a target='_blank' href='https://testnet.cspr.live/deploy/\" + hash + \"'>View on cspr.live</a>\");\r\n      initiateGetDeployProcedure(hash);\r\n      \r\n    }).catch((error) => {\r\n      alert(error);\r\n      CloseModal()\r\n    });\r\n  }\r\n  async function initiateGetDeployProcedure(hash) {\r\n    getDeploy(hash);\r\n    getDeployInterval = setInterval(() => { //We call this every 5 seconds to check on the status of the deploy\r\n      getDeploy(hash);\r\n    }, 5000);\r\n  }\r\n  async function getDeploy(deployHash) {\r\n    axios.get(\"http://localhost:6100/getDeploy\", { //Sends request to /getDeploy endpoint in server.js.\r\n      params: {\r\n        hash: deployHash,\r\n      }\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((response) => {\r\n      //response.data[0] == execution_results {...}\r\n      if (response.data.length == 0) { //See if there's return data yet\r\n        console.log(\"No return data yet\");\r\n        return;\r\n      }\r\n  \r\n      const executionResults = response.data[0];\r\n  \r\n      if (!executionResults.hasOwnProperty(\"result\")) { //If executionResults doesn't contain the result key the deployment hasn't been executed by the node\r\n        console.log(\"Doesnt have result yet\");\r\n        return;\r\n      }\r\n  \r\n      const result = executionResults.result; //Get the result\r\n      console.log(response.data);\r\n  \r\n      if (result.hasOwnProperty(\"Success\")) { //Deployment succeeded!\r\n        console.log(\"Success!\");\r\n         setSessionGames(0);\r\n         setSessionWins(0);\r\n         setSessionLosses(0);\r\n         setSessionStalemates(0);\r\n        console.log(\"Execution Successful\")\r\n        CloseModal()\r\n      } else if (result.hasOwnProperty(\"Failure\")) {\r\n        console.log(\"Execution Failure\");\r\n        CloseModal()\r\n      } else {\r\n        console.log(\"Unknown Error\");\r\n        CloseModal()\r\n      }\r\n      clearInterval(getDeployInterval); //Stop polling getDeploy\r\n  \r\n    }).catch((error) => {\r\n      alert(error);\r\n      CloseModal()\r\n      clearInterval(getDeployInterval); //Stop polling getDeploy\r\n    });\r\n  }\r\n\r\n//render page\r\n  return (\r\n    <div>\r\n<ModalRoot/>\r\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/Home\">Casper Chess</a>\r\n   \r\n      <ul className=\"navbar-nav me-auto\">\r\n        <Layout />\r\n       <li className=\"nav-item\">\r\n          <a className=\"nav-link\" id=\"connectBtn\" onClick={connect} >Connect</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" id=\"deployBtn\" onClick={deploy} >Save</a>\r\n        </li>\r\n      </ul>\r\n      <ul >  \r\n         <li id=\"textAddress\">Connected account: </li>\r\n                  <li id=\"textBalance\">CSPR Balance: </li>\r\n                </ul>\r\n                <ul>\r\n                <li id=\"textTotal_Games\">Total Games: </li>\r\n                <li id=\"textWins\">Wins: </li>\r\n                </ul>\r\n                <ul>\r\n                <li id=\"textLosses\">Losses: </li>\r\n                <li id=\"textStalemates\">Stalemates: </li>\r\n                </ul>\r\n                \r\n               \r\n              \r\n  </div>\r\n  \r\n</nav>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Layout />} />\r\n        <Route index element={<Home />} />\r\n        <Route path=\"/Game\" element={<Game gametoapp={gametoapp}/>} />\r\n        <Route path=\"*\" element={<Nopage />} />\r\n      </Routes>\r\n      <Outlet />\r\n      </div>\r\n    \r\n\r\n  );\r\n}\r\nfunction csprToMotes(cspr) {\r\n  return cspr * 10**9;\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}